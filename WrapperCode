package day3;

import java.util.Objects;

public class IntWrapper {
	static IntWrapper[] cache = new IntWrapper[256];
	static int tos=0;
	private int value;
	public IntWrapper() {this.value=0;}
	public IntWrapper(int value) {
		
		if(tos<256) {
			int flag=0;

			for (int i=0;i<tos;i++) {
				if (cache[i].intValue()==value) {
					this.value = cache[i].intValue();
					flag=1;
				}
			}
			if(flag==0) {
				cache[tos] = new IntWrapper();
				cache[tos].setValue(value); 
				tos++;
				this.value = value;
			}
			
		}
		
		
	}

	@Override
	public int hashCode() {
		return value;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		IntWrapper other = (IntWrapper) obj;
		return value == other.value;
	}
	public int intValue() {
		return value;
	}
	public double doubleValue() {
		return (double)value;
	}
	public void setValue(int v) {
		value=v;
	}
	public IntWrapper valueOf() {
		//this.value = value;
		return new IntWrapper(this.value);
	}

	public void increment() {
		this.value++;
	}
	public Boolean isEven() {
		return this.value % 2 == 0;
	}

	@Override
	public String toString() {
		return "IntWrapper [value=" + value + "]";
	}


	public static void main(String[] args) {
		int i=10;
		IntWrapper wrapper = new IntWrapper(i);
		IntWrapper a = wrapper.valueOf();
		System.out.println(a.intValue());
		a.increment();
		System.out.println(a);
		System.out.println("a.isEven()?" + a.isEven());
		System.out.println(a);
		IntWrapper wr2=new IntWrapper(i);
		System.out.println(wrapper==wr2);
		
		

	}
	

}
