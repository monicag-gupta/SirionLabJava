package com.RestSBPrj.controller;
EmpCRUDService

package com.RestSBPrj.entity;
EmpDAO

package com.RestSBPrj.entity;
Emp

Src->main-> webapp
index.jsp








package com.RestSBPrj.entity;

import org.springframework.stereotype.Repository;

@Repository
public class Emp {
    private int empId;
    private String empName;

    public int getEmpId() {
        return empId;
    }

    public void setEmpId(int empId) {
        this.empId = empId;
    }

    public String getEmpName() {
        return empName;
    }

    public void setEmpName(String empName) {
        this.empName = empName;
    }

    public Emp(int empId, String empName) {
        this.empId = empId;
        this.empName = empName;
    }
    public Emp(){}

    @Override
    public String toString() {
        return "\nEmp{" +
                "empId=" + empId +
                ", empName='" + empName + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object obj) {
        Emp e=(Emp)obj;
        return this.empId == e.empId;
    }
}












<html>
<body>
    <br>
    <h2>SpringBoot RESTful Web Application!</h2>
    <p>
        <a href="rest/empCRUD/">Click Here</a>
    </p>
    <hr>
    <h2>Form to add Emp by Get: Create in CRUD: </h2>
    <form action="rest/empCRUD/add" method="get">
      Enter Emp id: <input type="number" name="eid">
      Enter Emp Name: <input type="text" name="ename">
      <input type="Submit">
    </form>
    <br>
    <hr>
    <h2>Form to add Emp by Post: Create in CRUD: </h2>
    <form action="rest/empCRUD/addPost" method="post">
      Enter Emp id: <input type="number" name="eid">
      Enter Emp Name: <input type="text" name="ename">
      <input type="Submit">
    </form>
    <br>
    <hr>
    <h2>Get List of Emps : Read in CRUD: </h2>
    <a href="rest/empCRUD/getAll"> Get the list of Emps</a>

    <br>
    <hr>
    <h2>Form to Update Emp by Get: Update in CRUD: </h2>
    <form action="rest/empCRUD/updateEmp" method="get">
      Enter Emp id: <input type="number" name="eid">
      Enter Emp Name: <input type="text" name="ename">
      <input type="Submit">
    </form>

    <br>
    <hr>
    <h2>Form to Delete Emp by Get: Delete in CRUD: </h2>
    <form action="rest/empCRUD/delEmp" method="get">
      Enter Emp id: <input type="number" name="eid">
      <input type="Submit">
    </form>

    <br>
    <hr>
    <h2>Form to Get an Emp by Get: Read in CRUD: </h2>
    <form action="rest/empCRUD/getEmp" method="get">
      Enter Emp id: <input type="number" name="eid">
      <input type="Submit">
    </form>

    <h1>End of REST</h1>

  </body>
</html>









package com.RestSBPrj.entity;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.stereotype.Repository;

@Repository
public class EmpDAO {
    private static ArrayList<Emp> emps = new ArrayList<>(Arrays.asList(new Emp(101, "Abc"),
            new Emp(102,"Abcd"),new Emp(103,"Abcde"),
            new Emp(104,"Abcdef")));
    public EmpDAO(){

    }
    public Emp getEmp(int id)
    {
        Emp e=null;
        for(Emp emp : emps){
            if(emp.getEmpId()==id) {
                e = emp;
                break;
            }
        }
        return e;
    }
    public List<Emp> getAllEmps(){
        return emps;
    }
    public void addEmp(Emp e){
        emps.add(e);
    }
    public List<Emp> delEmp(int empID){
        emps.remove(new Emp(empID, "A"));
        return emps;
    }
    public String updateEmp(Emp e){
        String s="Not Found and so could not be Updated";
        for(Emp emp : emps){
            if(emp.getEmpId()==e.getEmpId()) {
                emp.setEmpName(e.getEmpName());
                s="Found and Updated";
                break;
            }
        }
        return s;
    }
}







package com.RestSBPrj.controller;



import com.RestSBPrj.entity.*;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/rest/empCRUD")
public class EmpCRUDService {
	@GetMapping("/")
	public ResponseEntity<String> getMsg() {
		return new ResponseEntity<String>("<h1>Emp CRUD works</h1>", HttpStatus.OK);
	}

	@GetMapping("/getAll")
	public ResponseEntity<List<Emp>> ListEmps() {
		EmpDAO edao = new EmpDAO();
		return new ResponseEntity<>(edao.getAllEmps(), HttpStatus.OK);
	}

	@GetMapping("/getEmp")
	public ResponseEntity<Emp> getEmp(@RequestParam("eid") int eid) {
		EmpDAO edao = new EmpDAO();
		return new ResponseEntity<>(edao.getEmp(eid), HttpStatus.OK);
	}

	@GetMapping("/updateEmp")
	public String upEmp(@RequestParam("eid") int eid, @RequestParam("ename") String ename) {
		Emp e = new Emp(eid, ename);
		EmpDAO edao = new EmpDAO();
		String r = edao.updateEmp(e);
		return r;

	}

	@GetMapping("/delEmp")
	public ResponseEntity<List<Emp>> delEmp(@RequestParam("eid") int eid) {
		EmpDAO edao = new EmpDAO();
		return new ResponseEntity<>(edao.delEmp(eid), HttpStatus.OK);

	}

	@PostMapping("/addPost")
	public String addEmpPost(@RequestParam("eid") int eid, @RequestParam("ename") String ename) {
		Emp e = new Emp(eid, ename);
		EmpDAO edao = new EmpDAO();
		edao.addEmp(e);
		return "success by post";
	}

	@GetMapping("/add")
	public String addEmp(@RequestParam("eid") int eid, @RequestParam("ename") String ename) {
		Emp e = new Emp(eid, ename);
		EmpDAO edao = new EmpDAO();
		edao.addEmp(e);
		return "success";

	}

}



















