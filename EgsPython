# python3 code to illustrate the difference between
# == and is operator. Here, [] is an empty list
list1 = []; list2 = []; list3=list1
print(id(list1)); print(id(list2)); print(id(list3))
if (list1 == list2):
	print("(list1 == list2) is True")
else:
	print("(list1 == list2) is False")
if (list1 is list2):
	print("(list1 is list2) is True")
else:
	print("(list1 is list2) is False")
if (list1 is list3):
	print("(list1 is list3) is True")
else:
	print("(list1 is list3) is False")
list3 = list3 + list2
if (list1 is list3):
	print("(now list1 is list3) is True")
else:
	print("(now list1 is list3) is False")








# importing "copy" for copy operations
import copy
li1 = [1, 2, [3,5], 4] # initializing list 1
# using deepcopy to deep copy
li2 = copy.deepcopy(li1)
# original elements of list
print ("The original elements before deep copying")
for i in range(0,len(li1)):
	print (li1[i],end=" ")
print("\r")
li2[2][0] = 7  # adding and element to new list
# Change is reflected in l2
print ("The new list of elements after deep copying ")
for i in range(0,len( li1)):
	print (li2[i],end=" ")
print("\r")
# Change is NOT reflected in original list as it is a deep copy
print ("The original elements after deep copying")
for i in range(0,len( li1)):
	print (li1[i],end=" ")


