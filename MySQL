Step 1 – Download MySQL:
https://dev.mysql.com/downloads/installer/
Step 2 –Install MySQL
Step 3 - Download Workbench
Open the official download site of MySQL Workbench. It shows the options to download Workbench.:
https://dev.mysql.com/downloads/workbench/
Step 4 - Install Workbench
For Mac System:
https://dev.mysql.com/downloads/mysql/

If you’re at the MySQL command line mysql> you have to declare the SQL file as source.

mysql> source \home\user\Desktop\test.sql;












Create a new Database Training:
mysql> create database training;
Use the database training:
mysql> use training;





CREATE TABLE people (
id INT PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(255),
age INT
);

INSERT INTO `people` (`name`, `age`) VALUES
('John', 24),
('Ishu', 22),
('Jane', 22),
('Ram', 20),
('Suman', 18),
('Suman', 18);



Duplicating a MySQL Table, Indexes and Data

CREATE TABLE newtable LIKE oldtable;
INSERT newtable SELECT * FROM oldtable;


mysql> create table person like people;
mysql> Insert person select * from people;






Projection of Name and Age:
SELECT `name`, `age` FROM `people`;

Selection of specific records:
SELECT `name`, `age` FROM `people` WHERE `age` > 22;

SELECT * FROM `people`;






SET SQL_SAFE_UPDATES = 0;



UPDATE `people` SET `age` = 23 WHERE `name` = 'Jane';



update person set name='Jay';




DELETE FROM `person` WHERE `name` = 'Jane';

DELETE FROM `person`;

select * from person;

Insert person select ID, name, age from people;







(1,'ASSASSINS CREED: EMBERS','Animations'),
(2,'Real Steel(2012)','Animations'),
(3,'Alvin and the Chipmunks','Animations'),
(4,'The Adventures of Tin Tin','Animations'),
(5,'Safe (2012)','Action'),
(6,'Safe House(2012)','Action'),
(7,'3 Idiots','Drama'),
(8,'Ghazni','Drama'),
(9,'Nayak','Drama'),
(10,'Marley and me','Family')





(1,'Adam','Smith',1), 
(2, 'Ravi', 'Kumar', 2), 
(3, 'Susan', 'Davidson', 5),
(4, 'Jenny', 'Adrianna', 8),
(6,'Lee','Pong',10)











DROP TABLE 
 If Exists 
Products;






create table Student(stdId int primary key, stdName varchar(255));
insert into Student values(101,'John'),(102,'Jane'),(103,'Smith');

select * from Student;



insert into Student values(null,'Johnny'); -- Error PK cannot be null
insert into Student values(101,'Johnny');  -- Error PK can not be duplicate




create table College(CollegeId int primary key, CollegeName varchar(255) unique);
insert into College values(10101,'DTU'),(10092,'IIT'),(10083,'BHU');

insert into College values(10167,'DTU');  -- Duplicate not allowed for Unique key
insert into College values(10167,null); -- null allowed
insert into College values(10165,null); -- any null allowed

select * from College;







insert into Student values(104,'Johnny'),(105,'Peter'),(106,'Martin');

create table Course(CourseId int, CourseName varchar(255), fees int, studId int, constraint fkCrseStd foreign key(studId) references Student(stdId));

























































