Drop table EMPLOYEE;
Create table Employee(id int not null, name varchar(255), salary int, Primary Key(id));





com.jpa


package com.jpa;
import javax.persistence.*;
@Entity
public class Employee {
  @Id
	private int id;
	private String name;
	private float salary;
	public Employee() {}
	public Employee(int id, String name, float salary) {
		super();
		this.id = id;
		this.name = name;
		this.salary = salary;}
	public int getId() {	return id;	}
	public void setId(int id) {	this.id = id;	}
	public String getName() {	return name;	}
	public void setName(String name) {	this.name = name;	}
	public float getSalary() {	return salary;	}
	public void setSalary(float salary) {	this.salary = salary;	}
	public String toString(){	return id+" "+name+" "+salary;	}
}







package com.jpa;

import java.util.*;
import org.springframework.orm.hibernate5.HibernateTemplate;
import org.springframework.transaction.annotation.Transactional;

public class EmployeeDao {
	HibernateTemplate template;

	public void setTemplate(HibernateTemplate template) {
		this.template = template;
	}

	@Transactional(readOnly = false)
	public void saveEmployee(Employee e) {
		template.save(e);
	}

	@Transactional(readOnly = false)
	public void updateEmployee(Employee e) {
		template.update(e);
	}

	@Transactional(readOnly = false)
	public void deleteEmployee(Employee e) {
		template.delete(e);
	}

	@Transactional(readOnly = false)
	public Employee getById(int id) {
		Employee e = (Employee) template.get(Employee.class, id);
		return e;
	}

	@Transactional(readOnly = false)
	public List<Employee> getEmployees() {
		List<Employee> list = new ArrayList<Employee>();
		list = template.loadAll(Employee.class);
		return list;
	}
}
















