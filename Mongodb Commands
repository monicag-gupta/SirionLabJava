To create a database:
use javadb
The db does not get created till we insert a collection into it

To create collection:
Directly by inserting documents:
	db.Employee.insert ({	"Employeeid" : 1,	"EmployeeName" : "Martin"	})
	
	db.Employee.insert (	{
			"Employeeid" : 2,
			"EmployeeName" : "Mart"
		}
	)


By Command:
db.createCollection(name, options) 
name is the db name
Options:
Capped:
Boolean
(Optional) If it is set to true, enables a capped collection. Capped collection is a fixed size collection that automatically overwrites its oldest entries when it reaches its maximum size. If you specify true, you need to specify size parameter also.
AutoIndexID:
Boolean
(Optional) If it is set to true, automatically create index on ID field. Its default value is false.
Size:
Number
(Optional) It specifies a maximum size in bytes for a capped collection. If capped is true, then you need to specify this field also.
Max:
Number
(Optional) It specifies the maximum number of documents allowed in the capped collection.



Insert a document:
db.myColl.insert({"name" : "seomount"})  




Data Types in MongoDB:
Integer: Integer type is used to store a numerical value. Depending upon your server. An integer can be 32 bit or 64 bit
String: String is the most commonly used datatype to store the data. In MongoDB ,the string must be UTF-8 valid
Boolean: Boolean type is used to store a boolean(true/ false) value
Double: Double is used to store floating point values
Min & Max key: The min/max keys are used to compare a value against the lowest and highest BSON elements
Array: Arrays type is used to store arrays or list or multiple values into one key
Timestamp: Timestamp can be handy for recording when a document has been modified or added
Object: Object is used for embedded documents
Null: Null type which is used to store a Null value
Date: Date is used to store the current date or time in UNIX time format
Symbol: Symbol is generally reserved for languages that use a specific symbol type, it is also used identically to a string
Object ID: The Object ID datatype is used to store the document’s ID
Binary Data: Binary data is used to store binary data
Code: Code is used to store JavaScript code into the document
Regular Expression: Regular Expression datatype is used to store regular expression



Read:
db.COLLECTION_NAME.find()


db.Employee.find()


db.Employee.find().forEach(printjson)

db.Employee.find().pretty()



db.Employee.insert ({	"Employeeid" : 1,	"EmployeeName" : "John Doe"	})
db.Employee.find({"Employeeid" : 1})




db.COLLECTION_NAME.update(SELECTION_CRITERIA, UPDATED_DATA)


db.Employee.update(
{"Employeeid" : 2},
{$set: { "EmployeeName" : "NewMartin"}});




Deleting Data

db.COLLECTION_NAME.remove(DELETION_CRITERIA)

db.Employee.insert ({	"Employeeid" : 22,	"EmployeeName" : "Jane Doe"	})

db.Employee.find()

db.Employee.remove({Employeeid:22})





In MongoDB, db.collection.drop() method is used to drop a collection from a database. It completely removes a collection from the database and does not leave any indexes associated with the dropped collections.
The db.collection.drop() method does not take any argument and produce an error when it is called with an argument. This method removes all the indexes associated with the dropped collection.
db.COLLECTION_NAME.drop()  
MongoDB Drop collection example
First check the already existing collections in your database.
>use EmployeeDB
> show collections  
Emp
Employee
>db.Emp.drop()  
True
Now check the collections in the database:
>show collections  
Employee
Now, there are no existing collections in your database.
Note: The drop command returns true if it successfully drops a collection. It returns false when there is no existing collection to drop.





use Testdb
db.movie.insert({"name":"Justice League"})
MongoDB db.dropDatabase() command is used to drop a existing database.
Basic syntax of dropDatabase() command is as follows −
db.dropDatabase()
This will delete the selected database. If you have not selected any database, then it will delete default 'test' database.
check the list of available databases by using the command, show dbs.
show dbs
Check current db:
db
Testdb
use javadb


















