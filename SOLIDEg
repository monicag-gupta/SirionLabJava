package SOLID;
class HPPrinterNotSRP{
	void print(String s) {
		System.out.println("Printing :" + s);
	}
	void loadDriver() {
		System.out.println("Load the driver in OS");
	}
	void scan(String s) {
		System.out.println("Scanning and loading in PC : " + s);
	}
}
class HPPrinterInSRP{
	void print(String s) {
		loadDriver();
		System.out.println("Printing :" + s);
	}
	void loadDriver() {
		System.out.println("Load the driver in OS");
	}
}
class HPScannerInSRP{
	void loadDriver() {
		System.out.println("Load the driver in OS");
	}
	void scan(String s) {
		loadDriver();
		System.out.println("Scanning and loading in PC : " + s);
	}
}
public class SRPEg {

	public static void main(String[] args) {
		HPScannerInSRP hp = new HPScannerInSRP();
		hp.scan("Hello");

	}

}
















package SOLID;

class Software {
	public final String AuthorName = "Bob";

	public void theme() {
		System.out.println("Basic Theme");
	}
}

class Update extends Software {
	String AuthorName = "Bob Martin";

	public void theme() {
		System.out.println("Live Theme");
	}
}

public class OCPEg {
	public static void main(String[] args) {
		Software s=new Update();
		System.out.println(s.AuthorName);
		s.theme();
	}
}










package SOLID;

import java.util.Arrays;
import java.util.List;
interface Bird{
	void eat();
}
interface FlightBird extends Bird { void fly();}
interface NonFlightBird extends Bird {}
//class Bird{
//	public void fly() {
//		System.out.println("Birds fly");
//	}
//}
class Parrot implements FlightBird{
	public void fly() {
		System.out.println("Parrot flies");
	}
	public void eat() {
		System.out.println("Parrot eats");
	}
}
class Crow implements FlightBird{
	public void fly() {
		System.out.println("Crow flies");
	}
	public void eat() {
		System.out.println("Crow eats");
	}
}
class Ostrich implements NonFlightBird{
	public void eat() {
		System.out.println("Ostrich eats");
	}
}

public class LSREg {
	static void callBirdFn(Bird b) {
		b.eat();
		if(b instanceof FlightBird)
			{
			FlightBird bb=(FlightBird)b;
			bb.fly();
			}
	}

	public static void main(String[] args) {
		List<Bird> birds = Arrays.asList(new Parrot(),new Parrot(), new Crow(), new Ostrich(),new Crow(), new Parrot());
		birds.forEach(LSREg::callBirdFn);
		
	}

}





















