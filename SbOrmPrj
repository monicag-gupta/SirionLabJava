Add Dependency:
MySQL Driver
Spring Web
Spring Data JPA




create database if not exists javadb;

use javadb;

drop table if exists emp;

create table emp(id int primary key, name varchar(40));
Insert into emp values(101, 'Emp1'); 
Insert into emp values(102, 'Emp2'); 
Insert into emp values(103, 'Emp3'); 
Insert into emp values(104, 'Emp4'); 
select * from emp;









spring.datasource.url=jdbc:mysql://localhost:3306/javadb
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver







package com.SbOrmPrj.model;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;

@Entity
public class Emp {
	@Id
	int id;
	String name;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	@Override
	public String toString() {
		return "Emp [id=" + id + ", name=" + name + "]";
	}
	public Emp(int id, String name) {
		this.id = id;
		this.name = name;
	}
	public Emp() {}

}








CrudRepository is the base interface for generic CRUD operations. It provides basic CRUD functionalities such as saving, deleting, and finding entities.
 Key Methods:
save(S entity): Saves a given entity.
findById(ID id): Retrieves an entity by its id.
findAll(): Returns all entities.
deleteById(ID id): Deletes the entity with the given id.
count(): Returns the number of entities.
existsById(ID id): Checks whether an entity with the given id exists.






JpaRepository extends CrudRepository and adds additional JPA-specific operations and methods. It includes methods for pagination and sorting, as well as some additional features that make it more convenient to use with JPA.
 Additional Key Methods:
findAll(Sort sort): Returns all entities sorted by the given options.
findAll(Pageable pageable): Returns a Page of entities meeting the paging restriction provided in the Pageable object.
saveAndFlush(S entity): Saves an entity and flushes changes instantly.
deleteInBatch(Iterable<T> entities): Deletes the given entities in a batch.
findOne(Example<S> example): Returns a single entity matching the given Example.






Inheritance:
CrudRepository is a part of the Spring Data Commons project and provides basic CRUD operations.
JpaRepository extends CrudRepository and PagingAndSortingRepository, providing additional JPA-specific operations.
Functionality:
CrudRepository focuses on generic CRUD operations.
JpaRepository provides more advanced features like batch operations, flushing, and more convenient methods for pagination and sorting.
Use Cases:
Use CrudRepository when you need basic CRUD functionality without additional JPA-specific features.
Use JpaRepository when you need more advanced database operations and want to take advantage of JPA-specific features like pagination and sorting.












